package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	httptransport "github.com/go-swagger/go-swagger/httpkit/client"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/mattbaird/gochimp/swagger/client/api_root"
	"github.com/mattbaird/gochimp/swagger/client/carts"
	"github.com/mattbaird/gochimp/swagger/client/ecommerce"
	"github.com/mattbaird/gochimp/swagger/client/operations"
	"github.com/mattbaird/gochimp/swagger/client/store"
)

// Default mailchimp30 HTTP client.
var Default = NewHTTPClient(nil)

// NewHTTPClient creates a new mailchimp30 HTTP client.
func NewHTTPClient(formats strfmt.Registry) *Mailchimp30 {
	if formats == nil {
		formats = strfmt.Default
	}
	transport := httptransport.New("mailchimp.com", "/", []string{"https", "http"})
	return New(transport, formats)
}

// New creates a new mailchimp30 client
func New(transport client.Transport, formats strfmt.Registry) *Mailchimp30 {
	cli := new(Mailchimp30)
	cli.Transport = transport

	cli.APIRoot = api_root.New(transport, formats)

	cli.Carts = carts.New(transport, formats)

	cli.Ecommerce = ecommerce.New(transport, formats)

	cli.Operations = operations.New(transport, formats)

	cli.Store = store.New(transport, formats)

	return cli
}

// Mailchimp30 is a client for mailchimp30
type Mailchimp30 struct {
	APIRoot *api_root.Client

	Carts *carts.Client

	Ecommerce *ecommerce.Client

	Operations *operations.Client

	Store *store.Client

	Transport client.Transport
}

// SetTransport changes the transport on the client and all its subresources
func (c *Mailchimp30) SetTransport(transport client.Transport) {
	c.Transport = transport

	c.APIRoot.SetTransport(transport)

	c.Carts.SetTransport(transport)

	c.Ecommerce.SetTransport(transport)

	c.Operations.SetTransport(transport)

	c.Store.SetTransport(transport)

}
