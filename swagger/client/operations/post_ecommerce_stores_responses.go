package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/httpkit/validate"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/mattbaird/gochimp/swagger/models"
)

// PostEcommerceStoresReader is a Reader for the PostEcommerceStores structure.
type PostEcommerceStoresReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostEcommerceStoresReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostEcommerceStoresOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewPostEcommerceStoresDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostEcommerceStoresOK creates a PostEcommerceStoresOK with default headers values
func NewPostEcommerceStoresOK() *PostEcommerceStoresOK {
	return &PostEcommerceStoresOK{}
}

/*PostEcommerceStoresOK handles this case with default header values.

OK
*/
type PostEcommerceStoresOK struct {
}

func (o *PostEcommerceStoresOK) Error() string {
	return fmt.Sprintf("[POST /ecommerce/stores][%d] postEcommerceStoresOK ", 200)
}

func (o *PostEcommerceStoresOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostEcommerceStoresDefault creates a PostEcommerceStoresDefault with default headers values
func NewPostEcommerceStoresDefault(code int) *PostEcommerceStoresDefault {
	return &PostEcommerceStoresDefault{
		_statusCode: code,
	}
}

/*PostEcommerceStoresDefault handles this case with default header values.

Error
*/
type PostEcommerceStoresDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post ecommerce stores default response
func (o *PostEcommerceStoresDefault) Code() int {
	return o._statusCode
}

func (o *PostEcommerceStoresDefault) Error() string {
	return fmt.Sprintf("[POST /ecommerce/stores][%d] PostEcommerceStores default  %+v", o._statusCode, o.Payload)
}

func (o *PostEcommerceStoresDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostEcommerceStoresBody post ecommerce stores body

swagger:model PostEcommerceStoresBody
*/
type PostEcommerceStoresBody struct {

	/* id

	Required: true
	*/
	ID string `json:"id"`

	/* list id

	Required: true
	*/
	ListID string `json:"list_id"`
}

// Validate validates this post ecommerce stores body
func (o *PostEcommerceStoresBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateListID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostEcommerceStoresBody) validateID(formats strfmt.Registry) error {

	if err := validate.RequiredString("body"+"."+"id", "body", string(o.ID)); err != nil {
		return err
	}

	return nil
}

func (o *PostEcommerceStoresBody) validateListID(formats strfmt.Registry) error {

	if err := validate.RequiredString("body"+"."+"list_id", "body", string(o.ListID)); err != nil {
		return err
	}

	return nil
}
