# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Mailchimp 3.0 API
  description: Send mail and things
  version: "3.0"
# the domain of the service
host: mailchimp.com
# array of all schemes that your API supports
schemes:
  - https
  - http
# will be prefixed to all paths
basePath: /3.0
produces:
  - application/json
paths:
  /:
    get:
      summary: API Root
      description: |
        Get Links to all other resources available in the API
      parameters:
        - name: fields
          in: query
          description: A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.
          required: false
          type: array
          items:
            type: string
        - name: excluded_fields
          in: query
          description: A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.
          required: false
          type: array
          items:
            type: string
      tags:
        - API Root
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ApiResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'

  /ecommerce/stores:
    get:
      summary: Get Stores
      description: Get information about all stores
      tags: [ecommerce, store]
      parameters:
        - name: fields
          in: query
          description: A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.
          required: false
          type: array
          items:
            type: string
        - name: excluded_fields
          in: query
          description: A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.
          required: false
          type: array
          items:
            type: string

            # TODO: all the params?
      responses:
        200:
          description: Success
          schema:
            type: boolean # TODO this is a lie
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: Add Store
      description: Add a new store to your account
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              id:
                type: string
              list_id:
                type: string
      responses:
        200:
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /ecommerce/store/{store_id}/carts:
    get:
      summary: words words
      description: words words
      tags: [ecommerce, store, carts]
      parameters:
        - name: store_id
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK





  # ----------------------------------
  # HERE
  # ----------------------------------
#   /estimates/price:
#     get:
#       summary: Price Estimates
#       description: |
#         The Price Estimates endpoint returns an estimated price range
#         for each product offered at a given location. The price estimate is
#         provided as a formatted string with the full price range and the localized
#         currency symbol.<br><br>The response also includes low and high estimates,
#         and the [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code for
#         situations requiring currency conversion. When surge is active for a particular
#         product, its surge_multiplier will be greater than 1, but the price estimate
#         already factors in this multiplier.
#       parameters:
#         - name: start_latitude
#           in: query
#           description: Latitude component of start location.
#           required: true
#           type: number
#           format: double
#         - name: start_longitude
#           in: query
#           description: Longitude component of start location.
#           required: true
#           type: number
#           format: double
#         - name: end_latitude
#           in: query
#           description: Latitude component of end location.
#           required: true
#           type: number
#           format: double
#         - name: end_longitude
#           in: query
#           description: Longitude component of end location.
#           required: true
#           type: number
#           format: double
#       tags:
#         - Estimates
#       responses:
#         200:
#           description: An array of price estimates by product
#           schema:
#             type: array
#             items:
#               $ref: '#/definitions/PriceEstimate'
#         default:
#           description: Unexpected error
#           schema:
#             $ref: '#/definitions/Error'
#   /estimates/time:
#     get:
#       summary: Time Estimates
#       description: The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.
#       parameters:
#         - name: start_latitude
#           in: query
#           description: Latitude component of start location.
#           required: true
#           type: number
#           format: double
#         - name: start_longitude
#           in: query
#           description: Longitude component of start location.
#           required: true
#           type: number
#           format: double
#         - name: customer_uuid
#           in: query
#           type: string
#           format: uuid
#           description: Unique customer identifier to be used for experience customization.
#         - name: product_id
#           in: query
#           type: string
#           description: Unique identifier representing a specific product for a given latitude & longitude.
#       tags:
#         - Estimates
#       responses:
#         200:
#           description: An array of products
#           schema:
#             type: array
#             items:
#               $ref: '#/definitions/Product'
#         default:
#           description: Unexpected error
#           schema:
#             $ref: '#/definitions/Error'
#   /me:
#     get:
#       summary: User Profile
#       description: The User Profile endpoint returns information about the Uber user that has authorized with the application.
#       tags:
#         - User
#       responses:
#         200:
#           description: Profile information for a user
#           schema:
#             $ref: '#/definitions/Profile'
#         default:
#           description: Unexpected error
#           schema:
#             $ref: '#/definitions/Error'
#   /history:
#     get:
#       summary: User Activity
#       description: The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.
#       parameters:
#         - name: offset
#           in: query
#           type: integer
#           format: int32
#           description: Offset the list of returned results by this amount. Default is zero.
#         - name: limit
#           in: query
#           type: integer
#           format: int32
#           description: Number of items to retrieve. Default is 5, maximum is 100.
#       tags:
#         - User
#       responses:
#         200:
#           description: History information for the given user
#           schema:
#             $ref: '#/definitions/Activities'
#         default:
#           description: Unexpected error
#           schema:
#             $ref: '#/definitions/Error'
definitions:
#   Product:
#     type: object
#     properties:
#       product_id:
#         type: string
#         description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
#       description:
#         type: string
#         description: Description of product.
#       display_name:
#         type: string
#         description: Display name of product.
#       capacity:
#         type: string
#         description: Capacity of product. For example, 4 people.
#       image:
#         type: string
#         description: Image URL representing the product.
#   PriceEstimate:
#     type: object
#     properties:
#       product_id:
#         type: string
#         description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
#       currency_code:
#         type: string
#         description: "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
#       display_name:
#         type: string
#         description: Display name of product.
#       estimate:
#         type: string
#         description: Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or "Metered" for TAXI.
#       low_estimate:
#         type: number
#         description: Lower bound of the estimated price.
#       high_estimate:
#         type: number
#         description: Upper bound of the estimated price.
#       surge_multiplier:
#         type: number
#         description: Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.
#   Profile:
#     type: object
#     properties:
#       first_name:
#         type: string
#         description: First name of the Uber user.
#       last_name:
#         type: string
#         description: Last name of the Uber user.
#       email:
#         type: string
#         description: Email address of the Uber user
#       picture:
#         type: string
#         description: Image URL of the Uber user.
#       promo_code:
#         type: string
#         description: Promo code of the Uber user.
#   Activity:
#     type: object
#     properties:
#       uuid:
#         type: string
#         description: Unique identifier for the activity
#   Activities:
#     type: object
#     properties:
#       offset:
#         type: integer
#         format: int32
#         description: Position in pagination.
#       limit:
#         type: integer
#         format: int32
#         description: Number of items to retrieve (100 max).
#       count:
#         type: integer
#         format: int32
#         description: Total number of items available.
#       history:
#         type: array
#         items:
#           $ref: '#/definitions/Activity'
  # -----------------------------------
  # from here
  # -----------------------------------
  Error:
    type: object
    properties:
      type:
        type: string
        title: Problem Type
      title:
        type: string
        title: Error Title
      status:
        type: integer
        title: HTTP Status Code
      detail:
        type: string
        title: Error Message
      instance:
        type: string
        title: Instance ID
  Links:
    type: array
    items:
      $ref: '#/definitions/Link'
  Link:
    type: object
    properties:
      rel:
        type: string
        title: Rel
      href:
        type: string
        title: Href
      method:
        type: string
        title: Method
      targetSchema:
        type: string
        title: Target Schema
      schema:
        type: string
        title: Schema
  ApiResponse:
    type: object
    properties:
      account_id:
        type: string
        title: User ID
      account_name:
        type: string
        title: Login Name
      email:
        type: string
        title: Account Email
      role:
        type: string
        title: Role
      pro_enabled:
        type: boolean
        title: MailChimp Pro
      last_login:
        type: string
        title: Last Login
      total_subscribers:
        type: integer
        title: Total Subscribers
      contact:
        type: object
        properties:
          company:
            type: string
            title: Company
          addr1:
            type: string
            title: Address Line 1
          addr2:
            type: string
            title: Address Line 2
          city:
            type: string
            title: City
          state:
            type: string
            title: State
          zip:
            type: string
            title: Zipcode
          country:
            type: string
            title: Country
      industry_stats:
        type: object
        properties:
          open_rate:
            type: integer
            title: Open Rate
          bounce_rate:
            type: integer
            title: Bounce Rate
          click_rate:
            type: integer
            title: Click Rate
      links:
        $ref: "#/definitions/Links"
